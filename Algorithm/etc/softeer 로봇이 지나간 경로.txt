const readline = require("readline")

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
})

let h = 0
let w = 0
let count = 0
let arr = []

let mark = ["^", "<", "v", ">"]
let dx = [-1,0,1,0]
let dy = [0,-1,0,1]
let answer = []
rl.on("line", (x) => {
    count++

    if(count === 1){
        h = +x.split(" ")[0]
        w = +x.split(" ")[1]
    }
    else if(count <= h+1){
        arr.push(x.split(""))
    }
    else{
        rl.close()
    }
})
.on("close", () => {
    let result = find(arr)

    console.log(result[0]+1, result[1]+1)
    console.log(mark[result[2]])

    navigate(result[0],result[1],result[2])
    

})

const find = (arr) => {
    let result = 0
    for(let i = 0; i < arr.length;i++){
        for(let j = 0; j < arr[i].length;j++){
            if(arr[i][j] === "#"){
                result = findDirection(i,j)
                if(result !== -1){
                return [i,j,result]
            }
            }  
        }
    }
}

const findDirection = (x,y) => {
    let count = 0
    let direction = 0
    for(let i = 0; i < dx.length;i++){
        let nx = x+ dx[i] 
        let ny = y+ dy[i]
        
        if((nx >= 0 && nx < h) && (ny >= 0 && ny < w) && arr[nx][ny] === "#"){
            count++
            direction = i
        }

    }
    return count === 1 ? direction : -1
}

const navigate = (x,y,direction) => {
    arr[x][y] = "."
    let prevD = direction
    let newD = direction
    
    while(true) {
        while(prevD === newD){
            process.stdout.write("A")
            x += dx[newD]
            y += dy[newD]
            arr[x][y] = "."

            x += dx[newD]
            y += dy[newD]
            arr[x][y] = "."

            prevD = newD
            newD = findDirection(x,y)

        }
        if(newD === -1){
            return
        }
        else if((prevD - newD) % 4  === -1){
            process.stdout.write("L")
        }
        else if((prevD - newD) === 1){
           process.stdout.write("R")
        }
        else if((prevD - newD) === -3){
            process.stdout.write("R")
        }
        else if((prevD - newD) === 3){
            process.stdout.write("L")
        }
        

        prevD = newD
    }


}